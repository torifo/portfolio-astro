---
// GamesSection.astro - ゲームセクション（microCMS連携）

import GameSNS from '../GameSNS.astro';

// microCMS APIからゲームデータを取得
const MICROCMS_API_KEY = import.meta.env.PUBLIC_MICROCMS_API_KEY;
const SERVICE_DOMAIN = import.meta.env.PUBLIC_MICROCMS_SERVICE_DOMAIN;

interface Game {
  id: string;
  title: string;
  gameIcon?: {
    url: string;
    height: number;
    width: number;
  }[];
  officialUrl: string;
  tags: string[];
  account: {
    fieldId: string;
    accountName: string;
    uid: number;
  }[];
  relatedSNS?: {
    fieldId: string;
    sns: string[];
    link: string;
    icon?: {
      url: string;
      height: number;
      width: number;
    }[];
  }[] | null;
}

interface GamesResponse {
  contents: Game[];
  totalCount: number;
}

let games: Game[] = [];

try {
  const response = await fetch(`${SERVICE_DOMAIN}games?limit=100`, {
    headers: {
      'X-MICROCMS-API-KEY': MICROCMS_API_KEY,
    },
  });
  
  if (response.ok) {
    const data: GamesResponse = await response.json();
    games = data.contents.reverse();
  }
} catch (error) {
  console.error('Failed to fetch games:', error);
}

// カラーパターン
const colorPatterns = [
  'from-blue-500 to-indigo-600',
  'from-purple-500 to-pink-600',
  'from-emerald-500 to-teal-600',
  'from-blue-400 to-sky-600',
  'from-red-500 to-orange-600',
  'from-violet-500 to-purple-600',
];

// タグの色マッピング
const getTagColor = (tag: string) => {
  const tagColors: Record<string, string> = {
    'HoYoverse': 'bg-blue-500/20 text-blue-300',
    'Yostar': 'bg-sky-500/20 text-sky-300',
    'RPG': 'bg-purple-500/20 text-purple-300',
    'オープンワールド': 'bg-green-500/20 text-green-300',
    'アクション': 'bg-red-500/20 text-red-300',
    'ターン性バトル': 'bg-indigo-500/20 text-indigo-300',
    'スペースファンタジー': 'bg-pink-500/20 text-pink-300',
    '都市ファンタジー': 'bg-teal-500/20 text-teal-300',
    '学園✖青春✖物語': 'bg-cyan-500/20 text-cyan-300',
  };
  return tagColors[tag] || 'bg-gray-500/20 text-gray-300';
};


// 全ゲームから共通SNSを収集（重複除去）
const allSNS = games.reduce((acc, game) => {
  if (game.relatedSNS) {
    game.relatedSNS.forEach((sns) => {
      if (!acc.find(existing => existing.link === sns.link)) {
        acc.push(sns);
      }
    });
  }
  return acc;
}, [] as { fieldId: string; sns: string[]; link: string; icon?: { url: string; height: number; width: number; }[]; }[]);
---

<section id="games" class="py-20 relative">
  <div class="container mx-auto px-6">
    <!-- セクションタイトル -->
    <div class="text-center mb-16">
      <h2 class="text-4xl md:text-5xl font-bold gradient-text mb-4">Games</h2>
      <p class="text-gray-400 text-lg max-w-2xl mx-auto">
        プレイしているゲームと関連アカウントを共有します。<br>
        ゲームを通じてコミュニティとつながり、新しい体験を楽しんでいます。
      </p>
    </div>

    <!-- ゲームグリッド -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {games.map((game, index) => {
        const colorPattern = colorPatterns[index % colorPatterns.length];
        const gameIcon = game.gameIcon?.[0];
        
        // タグに基づいて背景画像を決定
        const getBackgroundStyle = (tags: string[]) => {
          if (tags.includes('HoYoverse')) {
            return 'background-image: url("/images/hoyoverse.png"); background-size: contain; background-position: center; background-repeat: no-repeat; background-color: #1f2937;';
          } else if (tags.includes('Yostar')) {
            return 'background-image: url("/images/yostar.jpg"); background-size: contain; background-position: center; background-repeat: no-repeat; background-color: #f8fafc;';
          }
          return '';
        };
        
        const backgroundStyle = getBackgroundStyle(game.tags);
        
        return (
          <div class="glass rounded-2xl overflow-hidden hover-lift group">
            <div class="relative overflow-hidden">
              <div
                class={`w-full h-64 ${backgroundStyle ? '' : `bg-gradient-to-br ${colorPattern}`} flex items-center justify-center relative`}
                style={backgroundStyle}
              >
                {backgroundStyle && (
                  <div class="absolute inset-0 bg-black/30"></div>
                )}
                <div class="text-white text-center relative z-10">
                  <div class="w-20 h-20 mx-auto mb-4 bg-white/20 rounded-2xl flex items-center justify-center">
                    {gameIcon ? (
                      <img
                        src={gameIcon.url}
                        alt={`${game.title}アイコン`}
                        class="w-16 h-16 rounded-xl object-cover"
                      />
                    ) : (
                      <span class="text-3xl">🎮</span>
                    )}
                  </div>
                  <div class="text-lg font-semibold">{game.title}</div>
                </div>
              </div>
              <div class="absolute inset-0 bg-black/50 opacity-0 group-hover:opacity-100 transition-opacity flex items-center justify-center">
                <div class="flex space-x-4">
                  <a href={game.officialUrl} target="_blank" class="bg-white/20 p-3 rounded-full hover:bg-white/30 transition-colors">
                    <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                    </svg>
                  </a>
                </div>
              </div>
            </div>
            <div class="p-6">
              <h3 class="text-xl font-bold text-white mb-2">{game.title}</h3>
              <p class="text-gray-400 text-sm mb-4">
                {game.tags.join(' • ')}をお楽しみいただけます。
              </p>
              {game.account.length > 0 && (
                <div class="space-y-2 mb-4">
                  {game.account.map((acc) => (
                    <>
                      <div class="flex justify-between text-sm">
                        <span class="text-gray-300">プレイヤー名</span>
                        <span class="text-cyan-400">{acc.accountName}</span>
                      </div>
                      <div class="flex justify-between items-center text-sm">
                        <span class="text-gray-300">UID</span>
                        <div class="flex items-center space-x-2">
                          <span class="text-purple-400 font-mono">{acc.uid}</span>
                          <button
                            onclick={`copyUID('${acc.uid}')`}
                            class="copy-uid-btn p-1 rounded hover:bg-white/10 transition-colors group"
                            title="UIDをコピー"
                          >
                            <svg class="w-3 h-3 text-gray-400 group-hover:text-cyan-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                            </svg>
                          </button>
                        </div>
                      </div>
                    </>
                  ))}
                </div>
              )}
              <div class="flex flex-wrap gap-2">
                {game.tags.map((tag) => (
                  <span class={`px-3 py-1 ${getTagColor(tag)} rounded-full text-xs`}>
                    {tag}
                  </span>
                ))}
              </div>
            </div>
          </div>
        );
      })}
    </div>

    <!-- ゲーム統計 -->
    <div class="mt-16 grid grid-cols-2 md:grid-cols-4 gap-6">
      <div class="text-center glass p-6 rounded-2xl hover-lift">
        <div class="text-3xl font-bold gradient-text-cyan mb-2">{games.length}+</div>
        <p class="text-gray-300 text-sm">メインゲーム</p>
      </div>
      <div class="text-center glass p-6 rounded-2xl hover-lift">
        <div class="text-3xl font-bold gradient-text mb-2">500+</div>
        <p class="text-gray-300 text-sm">プレイ時間</p>
      </div>
      <div class="text-center glass p-6 rounded-2xl hover-lift">
        <div class="text-3xl font-bold gradient-text-cyan mb-2">{games.reduce((acc, game) => acc + game.account.length, 0)}</div>
        <p class="text-gray-300 text-sm">アカウント数</p>
      </div>
      <div class="text-center glass p-6 rounded-2xl hover-lift">
        <div class="text-3xl font-bold gradient-text mb-2">{games.reduce((acc, game) => acc + (game.relatedSNS?.length || 0), 0)}+</div>
        <p class="text-gray-300 text-sm">SNSリンク</p>
      </div>
    </div>

    <!-- 共通SNSセクション -->
    <GameSNS snsItems={allSNS} />
  </div>
</section>

<script>
  // UIDをクリップボードにコピーする関数
  (window as any).copyUID = function(uid: string | number): void {
    const uidString = uid.toString();
    if (navigator.clipboard) {
      navigator.clipboard.writeText(uidString).then(() => {
        // コピー成功の通知
        const notification = document.createElement('div');
        notification.textContent = 'UIDをコピーしました！';
        notification.style.cssText = `
          position: fixed;
          top: 20px;
          right: 20px;
          background: rgba(34, 211, 238, 0.9);
          color: white;
          padding: 12px 20px;
          border-radius: 8px;
          font-size: 14px;
          font-weight: 500;
          z-index: 9999;
          backdrop-filter: blur(10px);
          animation: slideIn 0.3s ease-out;
        `;
        
        document.body.appendChild(notification);
        
        // 2秒後に削除
        setTimeout(() => {
          notification.style.animation = 'slideOut 0.3s ease-in';
          setTimeout(() => notification.remove(), 300);
        }, 2000);
      }).catch(() => {
        // フォールバック: alertで通知
        prompt('UIDをコピーしてください:', uidString);
      });
    } else {
      // Clipboard API未対応の場合
      prompt('UIDをコピーしてください:', uidString);
    }
  };
</script>

<style>
  @keyframes slideIn {
    from {
      transform: translateX(100%);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }
  
  @keyframes slideOut {
    from {
      transform: translateX(0);
      opacity: 1;
    }
    to {
      transform: translateX(100%);
      opacity: 0;
    }
  }
</style>

<style>
  .copy-uid-btn {
    opacity: 0.7;
    transition: opacity 0.2s ease;
  }
  
  .copy-uid-btn:hover {
    opacity: 1;
  }
  
  .font-mono {
    font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
  }
</style>